{"version":3,"sources":["components/Header.js","components/columns.js","components/GlobalFilter.js","components/FilteringTable.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","alt","GROUPED_COLUMNS","Footer","columns","accessor","Cell","value","format","Date","GlobalFilter","filter","setFilter","id","class","onChange","e","target","FilteringTable","props","useMemo","data","tableInstance","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","getTableProps","setPageSize","gotoPage","state","setGlobalFilter","getTableBodyProps","canNextPage","canPreviousPage","headerGroups","page","nextPage","previousPage","pageOptions","pageCount","prepareRow","globalFilter","pageSize","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","length","Number","type","defaultValue","pageNumber","style","width","onClick","disabled","axios","get","App","users","API","then","results","user","first_name","name","first","last_name","last","date_of_birth","dob","date","email","phone","setState","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5817b46f.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../styles/header.css\";\r\n\r\n// Sets up a basic header component with company logo and h1 tag\r\nfunction Header () {\r\n    return (\r\n        <header className = \"header\">\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/f/f0/5b289489146c704a86b3a130-large_%281%29.jpg\" alt=\"wayne enterprises\" />\r\n            <h1>Employee Directory</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import {format} from \"date-fns\"\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: \"First Name\",\r\n        Footer: \"First Name\",\r\n        accessor: 'first_name'\r\n    },\r\n    {\r\n        Header: \"Last Name\",\r\n        Footer: \"Last Name\",\r\n        accessor: \"last_name\"\r\n    },\r\n    {\r\n        Header: \"Date of Birth\",\r\n        Footer: \"Date of Birth\",\r\n        accessor: \"date_of_birth\",\r\n        Cell: ({value}) => {return format(new Date(value), 'MM/dd/yyyy')}\r\n    },\r\n    {\r\n        Header: \"Email\",\r\n        Footer: \"Email\",\r\n        accessor: \"email\"\r\n    },\r\n    {\r\n        Header: \"Phone\",\r\n        Footer: \"Phone\",\r\n        accessor: \"phone\"\r\n    },\r\n]\r\n\r\nexport const GROUPED_COLUMNS = [\r\n    {\r\n        Header: \"Name\",\r\n        Footer: \"Name\",\r\n        columns: [\r\n            {\r\n                Header: \"First Name\",\r\n                Footer: \"First Name\",\r\n                accessor: 'first_name'\r\n            },\r\n            {\r\n                Header: \"Last Name\",\r\n                Footer: \"Last Name\",\r\n                accessor: \"last_name\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        Header: \"Info\",\r\n        Footer: \"Info\",\r\n        columns: [\r\n            {\r\n                Header: \"Date of Birth\",\r\n                Footer: \"Date of Birth\",\r\n                accessor: \"date_of_birth\",\r\n                Cell: ({value}) => {return format(new Date(value), 'MM/dd/yyyy')}\r\n            },\r\n            {\r\n                Header: \"Email\",\r\n                Footer: \"Email\",\r\n                accessor: \"email\"\r\n            },\r\n            {\r\n                Header: \"Phone\",\r\n                Footer: \"Phone\",\r\n                accessor: \"phone\"\r\n            },\r\n        ]\r\n    }\r\n]","import React from \"react\"\r\nimport \"../styles/globalFilter.css\"\r\n\r\nexport const GlobalFilter = ({ filter, setFilter }) => {\r\n    return (\r\n        <div id = \"globalFilter\" className = \"input-group mb3 justify-content-md-center\"> \r\n              <div class=\"input-group-prepend\">\r\n    <span class=\"input-group-text\" id=\"basic-addon1\">Search</span>\r\n  </div>\r\n  <input value = {filter || \"\"} onChange = {e => setFilter(e.target.value)} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { useTable, useSortBy, useGlobalFilter, usePagination } from 'react-table'\r\nimport { GROUPED_COLUMNS } from \"./columns\"\r\nimport \"../styles/table.css\"\r\nimport {GlobalFilter} from \"./GlobalFilter\"\r\n\r\n// set up a component for the table that will take in and display the employee information\r\nexport const FilteringTable = (props) => {\r\n    const columns = useMemo(() => GROUPED_COLUMNS, [])\r\n    const data = props.data\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data,\r\n        initialState: {pageIndex: 0}\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination)\r\n\r\n    // destructure table instance to get the required components\r\n    const { \r\n        getTableProps,\r\n        setPageSize,\r\n        gotoPage,\r\n        state,\r\n        setGlobalFilter,\r\n        getTableBodyProps, \r\n        canNextPage, \r\n        canPreviousPage, \r\n        headerGroups, \r\n        page, \r\n        nextPage, \r\n        previousPage, \r\n        pageOptions, \r\n        pageCount,\r\n        prepareRow }\r\n        = tableInstance\r\n\r\n    const { globalFilter, pageSize, pageIndex } = state\r\n\r\n\r\n    // Sets up the table JSX that will be displayed on the site, including a search filter functionality\r\n    return (\r\n        <>\r\n        <GlobalFilter filter = {globalFilter} setFilter = {setGlobalFilter} />\r\n        <table {...getTableProps()}>\r\n            <thead> \r\n                {headerGroups.map((headerGroup) => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {\r\n                            headerGroup.headers.map((column) => (\r\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                    {column.render(\"Header\")}\r\n                                    <span>\r\n                                        { column.isSorted ? ( column.isSortedDesc ? <img src=\"https://cdn3.iconfinder.com/data/icons/faticons/32/arrow-down-01-512.png\" alt=\"desc\" /> : <img src=\"https://cdn3.iconfinder.com/data/icons/faticons/32/arrow-up-01-512.png\" alt=\"asc\" />) : \"\" }\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {\r\n                    page.map( row=> {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {\r\n                                    row.cells.map( cell => {\r\n                                        return <td {...cell.getCellProps()}> {cell.render(\"Cell\")}</td>\r\n                                    })\r\n                                }\r\n                            </tr>\r\n                        )\r\n                    })}\r\n            </tbody>\r\n        </table>\r\n        {/* Sets up the pagination feature for the table */}\r\n        <div className=\"pagination\">\r\n            <div className =\"page\">\r\n            <span>\r\n                Page{' '}\r\n                <strong>\r\n                    {pageIndex + 1} of {pageOptions.length}\r\n                </strong>{' '}\r\n            </span>\r\n            <select value = {pageSize} onChange = {e => setPageSize(Number(e.target.value))}>\r\n                {\r\n                    [10,25,50].map(pageSize => (\r\n                        <option key = {pageSize} value = {pageSize}>\r\n                            Show {pageSize}\r\n                        </option>\r\n                    ))\r\n                }\r\n            </select>\r\n            <span>\r\n                {' '}Go To Page: {' '} \r\n                <input type=\"number\" defaultValue = {pageIndex + 1} onChange = {e => {\r\n                    const pageNumber = e.target.value ? Number(e.target.value) -1 : 0\r\n                    gotoPage(pageNumber)\r\n                }} \r\n                style = {{ width: '50px'}}/>\r\n            </span>\r\n            \r\n            </div>\r\n            <div className = \"nextPrevious\">\r\n            <button className = \"btn btn-outline-secondary\" onClick = {() => gotoPage(0)} disabled ={!canPreviousPage}>{'<<'}</button>\r\n            <button className = \"btn btn-outline-secondary\" onClick = {() => previousPage()} disabled = {!canPreviousPage}>Previous</button>\r\n            <button className = \"btn btn-outline-secondary\" onClick = {() => nextPage()} disabled = {!canNextPage}>Next</button>\r\n            <button className = \"btn btn-outline-secondary\" onClick = {() => gotoPage(pageCount - 1)} disabled ={!canNextPage}>{'>>'}</button>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nexport default {\r\n  getData: function() {\r\n    return  axios.get(\"https://randomuser.me/api/?results=200&nat=us\")\r\n    }\r\n};\r\n\r\n","import React, { Component } from 'react';\nimport Header from \"./components/Header\";\nimport { FilteringTable } from \"./components/FilteringTable\"\nimport API from \"../src/utils/API\"\n\n\nclass App extends Component {\n  // Create a state for the App component\n  state = {\n    users: []\n  }\n\n  componentDidMount() {\n    // On mount, run the API call to get the user data that we will be displaying in the directory\n    API.getData()\n    .then(({data:{results}}) => {\n      // Set up the user object array that we will be passing into the table component\n      let users = results.map(user => {\n        return {\n          id: user.id.value || \"N/A\",\n          first_name: user.name.first,\n          last_name: user.name.last,\n          date_of_birth: user.dob.date,\n          email: user.email,\n          phone: user.phone\n        }\n      })\n      this.setState({users})\n    })\n  }\n// Render the web page, no need for a router since it's a single web page\n  render() {\n\n  return (\n    <div className = \"main\">\n      <Header />\n      {/* pass in the user data into the filtering table as a prop */}\n      <FilteringTable \n      data = {this.state.users} />\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './styles/table.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}